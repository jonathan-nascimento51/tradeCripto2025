//@version=6
indicator("Auto Fib Extension", overlay=true)

import joostraders/ConfluenceEngine/4 as conf
import joostraders/AutoFibCore/1 as fibcore

depthTooltip = "The minimum number of bars that will be taken into account when calculating the indicator."
depth = input.int(title="Depth", defval=10, minval=2, inline = "Pivots", tooltip=depthTooltip)
reverse = input(false, "Reverse", display = display.data_window)
var extendLeft = input(false, "Extend Left    |    Extend Right", inline = "Extend Lines", display = display.data_window)
var extendRight = input(true, "", inline = "Extend Lines", display = display.data_window)
var extending = extend.none
if extendLeft and extendRight
    extending := extend.both
if extendLeft and not extendRight
    extending := extend.left
if not extendLeft and extendRight
    extending := extend.right
prices = input(true, "Show Prices", display = display.data_window)
levels = input(true, "Show Levels", inline = "Levels", display = display.data_window)
levelsFormat = input.string("Values", "", options = ["Values", "Percent"], inline = "Levels", display = display.data_window)
labelsPosition = input.string("Left", "Labels Position", options = ["Left", "Right"], display = display.data_window)
backgroundTransparency = input.int(85, "Background Transparency", minval = 0, maxval = 100, display = display.data_window)

upperThreshold = 0.236
lowerThreshold = 1.0

// --- Confluence Engine state arrays
var float[] pivotHistory = array.new<float>()
var line[]  zoneLines     = array.new<line>()
var label[] zoneLabels    = array.new<label>()

[endPrice, diff, lineLast] = fibcore.update(depth, upperThreshold, lowerThreshold)
// store the last detected pivot for confluence analysis
pivotHistory := conf.addPivotToHistory(endPrice, pivotHistory)



show_0 = input(true, "", inline = "Level0", display = display.data_window)
value_0 = input(0, "", inline = "Level0", display = display.data_window)
color_0 = input(#787b86, "", inline = "Level0", display = display.data_window)

show_0_236 = input(true, "", inline = "Level0", display = display.data_window)
value_0_236 = input(0.236, "", inline = "Level0", display = display.data_window)
color_0_236 = input(#f44336, "", inline = "Level0", display = display.data_window)

show_0_382 = input(true, "", inline = "Level1", display = display.data_window)
value_0_382 = input(0.382, "", inline = "Level1", display = display.data_window)
color_0_382 = input(#81c784, "", inline = "Level1", display = display.data_window)

show_0_5 = input(true, "", inline = "Level1", display = display.data_window)
value_0_5 = input(0.5, "", inline = "Level1", display = display.data_window)
color_0_5 = input(#4caf50, "", inline = "Level1", display = display.data_window)

show_0_618 = input(true, "", inline = "Level2", display = display.data_window)
value_0_618 = input(0.618, "", inline = "Level2", display = display.data_window)
color_0_618 = input(#009688, "", inline = "Level2", display = display.data_window)

show_0_65 = input(false, "", inline = "Level2", display = display.data_window)
value_0_65 = input(0.65, "", inline = "Level2", display = display.data_window)
color_0_65 = input(#009688, "", inline = "Level2", display = display.data_window)

show_0_786 = input(true, "", inline = "Level3", display = display.data_window)
value_0_786 = input(0.786, "", inline = "Level3", display = display.data_window)
color_0_786 = input(#64b5f6, "", inline = "Level3", display = display.data_window)

show_1 = input(true, "", inline = "Level3", display = display.data_window)
value_1 = input(1, "", inline = "Level3", display = display.data_window)
color_1 = input(#787b86, "", inline = "Level3", display = display.data_window)

show_1_272 = input(false, "", inline = "Level4", display = display.data_window)
value_1_272 = input(1.272, "", inline = "Level4", display = display.data_window)
color_1_272 = input(#81c784, "", inline = "Level4", display = display.data_window)

show_1_414 = input(false, "", inline = "Level4", display = display.data_window)
value_1_414 = input(1.414, "", inline = "Level4", display = display.data_window)
color_1_414 = input(#f44336, "", inline = "Level4", display = display.data_window)

show_1_618 = input(true, "", inline = "Level5", display = display.data_window)
value_1_618 = input(1.618, "", inline = "Level5", display = display.data_window)
color_1_618 = input(#2962ff, "", inline = "Level5", display = display.data_window)

show_1_65 = input(false, "", inline = "Level5", display = display.data_window)
value_1_65 = input(1.65, "", inline = "Level5", display = display.data_window)
color_1_65 = input(#2962ff, "", inline = "Level5", display = display.data_window)

show_2_618 = input(true, "", inline = "Level6", display = display.data_window)
value_2_618 = input(2.618, "", inline = "Level6", display = display.data_window)
color_2_618 = input(#f44336, "", inline = "Level6", display = display.data_window)

show_2_65 = input(false, "", inline = "Level6", display = display.data_window)
value_2_65 = input(2.65, "", inline = "Level6", display = display.data_window)
color_2_65 = input(#f44336, "", inline = "Level6", display = display.data_window)

show_3_618 = input(true, "", inline = "Level7", display = display.data_window)
value_3_618 = input(3.618, "", inline = "Level7", display = display.data_window)
color_3_618 = input(#9c27b0, "", inline = "Level7", display = display.data_window)

show_3_65 = input(false, "", inline = "Level7", display = display.data_window)
value_3_65 = input(3.65, "", inline = "Level7", display = display.data_window)
color_3_65 = input(#9c27b0, "", inline = "Level7", display = display.data_window)

show_4_236 = input(true, "", inline = "Level8", display = display.data_window)
value_4_236 = input(4.236, "", inline = "Level8", display = display.data_window)
color_4_236 = input(#e91e63, "", inline = "Level8", display = display.data_window)

show_4_618 = input(false, "", inline = "Level8", display = display.data_window)
value_4_618 = input(4.618, "", inline = "Level8", display = display.data_window)
color_4_618 = input(#81c784, "", inline = "Level8", display = display.data_window)

show_neg_0_236 = input(false, "", inline = "Level9", display = display.data_window)
value_neg_0_236 = input(-0.236, "", inline = "Level9", display = display.data_window)
color_neg_0_236 = input(#f44336, "", inline = "Level9", display = display.data_window)

show_neg_0_382 = input(false, "", inline = "Level9", display = display.data_window)
value_neg_0_382 = input(-0.382, "", inline = "Level9", display = display.data_window)
color_neg_0_382 = input(#81c784, "", inline = "Level9", display = display.data_window)

show_neg_0_618 = input(false, "", inline = "Level10", display = display.data_window)
value_neg_0_618 = input(-0.618, "", inline = "Level10", display = display.data_window)
color_neg_0_618 = input(#009688, "", inline = "Level10", display = display.data_window)

show_neg_0_65 = input(false, "", inline = "Level10", display = display.data_window)
value_neg_0_65 = input(-0.65, "", inline = "Level10", display = display.data_window)
color_neg_0_65 = input(#009688, "", inline = "Level10", display = display.data_window)

lineId0 = fibcore.processLevel(show_neg_0_65, value_neg_0_65, color_neg_0_65, line(na), endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId1 = fibcore.processLevel(show_neg_0_618, value_neg_0_618, color_neg_0_618, lineId0, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId2 = fibcore.processLevel(show_neg_0_382, value_neg_0_382, color_neg_0_382, lineId1, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId3 = fibcore.processLevel(show_neg_0_236, value_neg_0_236, color_neg_0_236, lineId2, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId4 = fibcore.processLevel(show_0, value_0, color_0, lineId3, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId5 = fibcore.processLevel(show_0_236, value_0_236, color_0_236, lineId4, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId6 = fibcore.processLevel(show_0_382, value_0_382, color_0_382, lineId5, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId7 = fibcore.processLevel(show_0_5, value_0_5, color_0_5, lineId6, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId8 = fibcore.processLevel(show_0_618, value_0_618, color_0_618, lineId7, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId9 = fibcore.processLevel(show_0_65, value_0_65, color_0_65, lineId8, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId10 = fibcore.processLevel(show_0_786, value_0_786, color_0_786, lineId9, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId11 = fibcore.processLevel(show_1, value_1, color_1, lineId10, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId12 = fibcore.processLevel(show_1_272, value_1_272, color_1_272, lineId11, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId13 = fibcore.processLevel(show_1_414, value_1_414, color_1_414, lineId12, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId14 = fibcore.processLevel(show_1_618, value_1_618, color_1_618, lineId13, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId15 = fibcore.processLevel(show_1_65, value_1_65, color_1_65, lineId14, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId16 = fibcore.processLevel(show_2_618, value_2_618, color_2_618, lineId15, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId17 = fibcore.processLevel(show_2_65, value_2_65, color_2_65, lineId16, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId18 = fibcore.processLevel(show_3_618, value_3_618, color_3_618, lineId17, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId19 = fibcore.processLevel(show_3_65, value_3_65, color_3_65, lineId18, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId20 = fibcore.processLevel(show_4_236, value_4_236, color_4_236, lineId19, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)
lineId21 = fibcore.processLevel(show_4_618, value_4_618, color_4_618, lineId20, endPrice, diff, reverse, extending, levelsFormat, levels, prices, labelsPosition, extendRight, backgroundTransparency)

// ------------------------------------------------------------------------------
// Confluence Engine: cluster Fibonacci levels from recent pivots
// Verificação ainda mais robusta, exigindo pelo menos 2 pivôs para confluência
if array.size(pivotHistory) > 1    
    float[] fibRatios = array.from(value_neg_0_65, value_neg_0_618, value_neg_0_382, value_neg_0_236,value_0, value_0_236, value_0_382, value_0_5,value_0_618, value_0_65, value_0_786, value_1,value_1_272, value_1_414, value_1_618, value_1_65,value_2_618, value_2_65, value_3_618, value_3_65,value_4_236, value_4_618)
    [clusters, weights] = conf.groupFiboLevels(pivotHistory, fibRatios)
    conf.drawConfluenceZones(clusters, weights, zoneLines, zoneLabels)
