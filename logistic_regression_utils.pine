//@version=6
library("LogisticRegressionUtils", overlay=false)

// Basic logistic function used by the model
export logistic(float x1, float x2, float w0, float w1, float w2) =>
    // Calculate the raw linear combination
    float z = w0 + w1 * x1 + w2 * x2

    // Clamp "z" to a safe range before applying exp to avoid overflow
    float zClamped = math.min(math.max(z, -50), 50)

    // Standard logistic transformation
    1.0 / (1.0 + math.exp(-zClamped))

// Logistic regression loss utility
export logLoss(float y, float p) =>
    float eps = 1e-10
    // Ensure prediction probability stays in a safe range
    float safeP = math.max(eps, math.min(p, 1 - eps))
    -y * math.log(safeP) - (1.0 - y) * math.log(1.0 - safeP)