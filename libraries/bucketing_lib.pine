//@version=6
library("BucketingLib", true)
import "../libraries/price_precision_lib.pine" as pp
import "../libraries/map_utils_lib.pine" as map

//@description Groups price levels into buckets rounded to the symbol's tick.
//@param levels     array<float>
//@param proximity  simple float (bucket width)
//@returns          map<float,int>
export bucketMap(array<float> levels, simple float proximity) =>
    // Reinitialize on each call to avoid residual values
    map<float,int> buckets = map.new<float,int>()
    if proximity > 0
        for lvl in levels
            if not na(lvl)
                float raw = math.round(lvl / proximity) * proximity
                float key = pp.roundToTick(raw)
                map.put(buckets, key, cnt)
    buckets
