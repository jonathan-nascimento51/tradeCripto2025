//@version=6
library("BucketingLib", true)
import "../libraries/price_precision_lib.pine" as pp

//@description Groups nearby levels into price buckets
//@param levels  array<float>
//@param proximity  simple float (bucket width)
//@returns          map<float,int>
export bucketMap(array<float> levels, simple float proximity) =>
    // Create a fresh map on every call so results do not persist
    var map<float,int> buckets = map.new<float,int>()
    if proximity > 0
        for lvl in levels
            if not na(lvl)
                float b = pp.roundToTick(math.floor(lvl / proximity) * proximity)
                buckets.put(b, (buckets.contains(b) ? buckets.get(b) : 0) + 1)
    buckets
