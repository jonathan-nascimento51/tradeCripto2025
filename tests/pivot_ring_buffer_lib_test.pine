//@version=6
indicator('Pivot Ring Buffer Lib Test', overlay=true)
import jonathanmoletta17/PivotRingBuffer/1 as prb

leftBars  = input.int(3, 'Left Bars')
rightBars = input.int(3, 'Right Bars')
capacity  = input.int(20, 'Buffer Capacity')

prb.RingBuffer rb = prb.newRingBuffer(capacity)
prb.setCapacity(rb, capacity)
cleanupEvery = input.int(1, 'Cleanup Every')
var int counter = 0

[float _ph, float _pl] = prb.processCandidate(rb, high, low, leftBars, rightBars, 20, false)
float ph = na
float pl = na
if counter == 0 or barstate.islast
    [ph, pl] := prb.cleanupCandidates(rb, high, low, rightBars, 20)
counter := (counter + 1) % cleanupEvery

plot(close)
plotshape(not na(ph) ? ph : na, style=shape.triangledown, location=location.absolute, color=color.red, size=size.tiny)
plotshape(not na(pl) ? pl : na, style=shape.triangleup, location=location.absolute, color=color.green, size=size.tiny)
// Expected output: red and green triangles mark validated pivot highs and lows.
